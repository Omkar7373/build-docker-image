name: Docker Image CI

on:
  push:
    branches: ["master"]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v3

      - name: Configure AWS credential
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-first-ecr-repo
          IMAGE_TAG: latest # ${{ github.event.head_commit.message }}
        run: |
          echo $IMAGE_TAG
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}	
      
      - name: Terraform Init
        run: |
          cd terraform-aws
          terraform init
	   
      - name: Terraform Validate
        id: validate
        run: |
          cd terraform-aws
          terraform validate -no-color
		  
      - name: Terraform Plan
        id: plan
        run: |
          cd terraform-aws
          terraform plan -no-color -input=false
        continue-on-error: true
		  
      - name: Terraform Apply
        id: apply
        run: |
          cd terraform-aws
          terraform apply -no-color -input=false
